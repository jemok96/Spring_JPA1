객체의 양방향 관계
• 객체의 양방향 관계는 사실 양방향 관계가 아니라 서로 다른 단뱡향 관계 2개다.
• 객체를 양방향으로 참조하려면 단방향 연관관계를 2개 만들어야 한다.

테이블의 양방향 연관관계
• 테이블은 외래 키 하나로 두 테이블의 연관관계를 관리
• MEMBER.TEAM_ID 외래 키 하나로 양방향 연관관계 가짐 (양쪽으로 조인할 수 있다.)

연관관계의 주인(Owner)
  양방향 매핑 규칙
• N:1관계일 때 N쪽인 곳을 연관관계의 주인으로 지정
• 객체의 두 관계중 하나를 연관관계의 주인으로 지정
• 연관관계의 주인만이 외래 키를 관리(등록, 수정)
• 주인이 아닌쪽은 읽기만 가능
• 주인은 mappedBy 속성 사용X
• 주인이 아니면 mappedBy 속성으로 주인 지정 => 실제로 DB에 생성되는 값은아님
외래 키가 있는 있는 곳을 주인으로 정해라


순수 객체 상태를 고려해서 항상 양쪽에 값을 설정하자
member.setTeam(team);
team.getMembers().add(member2);
==> 변경 포인트가 늘어나서 메소드 생성해서 사용하는게 더 나아보임

• 연관관계 편의 메소드를 생성하자
public void changeTeam(Team team){
        this.team = team;
        team.getMembers().add(this);
}
양방향 매핑시에 무한 루프를 조심하자
• 예: toString(), lombok, JSON 생성 라이브러리
Controller에서 Entity로 반환하지마라 ,값만 전달하는 dto로 변환해서 전달

단방향 매핑만으로도 이미 연관관계 매핑은 완료된거임
양방향 매핑은 반대 방향으로 조회(객체 그래프 탐색) 기능이 추가된 것 뿐 , 필요할 때 추가해도 됨
JPQL에서 역방향으로 탐색할 일이 많음

